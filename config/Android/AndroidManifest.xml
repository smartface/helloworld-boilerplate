<?xml version="1.0" encoding="utf-8"?>
<manifest
	xmlns:android="http://schemas.android.com/apk/res/android" package="${PackageName}" android:versionCode="1" android:versionName="${Version}" android:installLocation="auto">
	<!-- Required for SEND_SMS function. -->
	<!-- <uses-permission android:name="android.permission.SEND_SMS" /> -->
	<!-- <uses-permission android:name="android.permission.BLUETOOTH" /> -->
	<!-- Required for phone call functions. -->
	<!-- <uses-permission android:name="android.permission.CALL_PHONE" /> -->
	<!-- Required for Internet access by 3G, GSM and WIFI -->
	<uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />
	<!-- Required for GPS Usage. -->
	<!-- <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /> -->
	<!-- <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /> -->
	<!-- Required for vibrate function. -->
	<!-- <uses-permission android:name="android.permission.VIBRATE" /> -->
	<!-- Required for contact list functions. -->
	<!-- <uses-permission android:name="android.permission.READ_CONTACTS"/> -->
	<!-- Allows an application to get information about the currently or recently running tasks. -->
	<!--<uses-permission android:name="android.permission.GET_TASKS"/>-->
	<!-- Required for camera functions. -->
	<!-- <uses-permission android:name="android.permission.CAMERA" /> -->
	<!-- Required for write external storage. -->
	<!-- <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /> -->
	<!-- <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" /> -->
	<!-- 	<uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /><uses-permission android:name="android.permission.CHANGE_WIFI_STATE" /> -->
	<!-- Required for read phone state. -->
	<!-- <uses-permission android:name="android.permission.READ_PHONE_STATE" /> -->
	<!-- 	<uses-permission android:name="android.permission.PERSISTENT_ACTIVITY" /><uses-permission android:name="android.permission.RESTART_PACKAGES" /> -->
	<!-- <uses-permission android:name="android.permission.WAKE_LOCK" /> -->
	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
	<uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
	<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
	<!-- Required for receive sms. -->
	<!-- <uses-permission android:name="android.permission.RECEIVE_SMS" /> -->
	<!-- Required for read sms. -->
	<!-- <uses-permission android:name="android.permission.READ_SMS" /> -->
	<!-- <uses-permission android:name="com.android.vending.BILLING" /> -->
	<!-- <uses-permission android:name="android.permission.WAKE_LOCK" /> -->
	<!-- <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" /> -->
	<!-- Required for cloud messaging. -->
	<!-- <permission
		android:name="${PackageName}.permission.C2D_MESSAGE"
		android:protectionLevel="signature" /><uses-permission
		android:name="${PackageName}.permission.C2D_MESSAGE" /> -->
	<!-- This app has permission to register and receive data message. -->
	<!-- <uses-permission
		android:name="com.google.android.c2dm.permission.RECEIVE" /> -->
	<!-- GCM requires a Google account. -->
	<!-- <uses-permission android:name="android.permission.GET_ACCOUNTS" /> -->
	<!-- <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES"/> -->
	<!-- Required for accessing location. -->
	<!-- <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/><uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/> -->
	<!-- GCM requires access location. -->
	<!-- <uses-feature
		android:glEsVersion="0x00020000"
		android:required="true"/> -->
	<!-- Required for google maps. -->
	<!-- <permission
		android:name="${PackageName}.permission.MAPS_RECEIVE"
		android:protectionLevel="signature"/><uses-permission android:name="${PackageName}.permission.MAPS_RECEIVE"/> -->
	
	${compatibleScreens}

	${supportsScreens}
	
	
	
	<application  android:icon="@drawable/icon" android:supportsRtl="true" android:label="${ApplicationName}" android:largeHeap="true"  android:name="androidx.multidex.MultiDexApplication" android:requestLegacyExternalStorage="true" android:extractNativeLibs="true" android:allowNativeHeapPointerTagging="false">
		<uses-library android:name="org.apache.http.legacy" android:required="false"/>
		<activity android:name=".A" 
					android:label="${ApplicationName}" 	
					android:configChanges="keyboardHidden|orientation|screenSize" 
					android:launchMode="singleTask"
					android:windowSoftInputMode="adjustPan"
					android:screenOrientation="${Orientation}"
					android:theme="@style/defaultTheme" 
                    android:exported="true" 
                    android:resizeableActivity="false"
                    >
			<intent-filter>
				<action android:name="android.intent.action.SEARCH" />
			</intent-filter>
			<meta-data android:name="android.app.searchable"
								 android:resource="@xml/searchable"/>
			<intent-filter>
				<action android:name="android.intent.action.MAIN" />
				<category android:name="android.intent.category.LAUNCHER" />
			</intent-filter>
			<intent-filter>
				<action android:name="biz.smartface3.smartface_demo.run" />
				<category android:name="android.intent.category.DEFAULT" />
			</intent-filter>
		</activity>
		<!-- Restrict the app direction or make it automatic -->
		<meta-data android:name="locale"  android:value="auto" />
		<!--
				BroadcastReceiver that will receive intents from GCM
				services and handle them to the custom IntentService.

				The com.google.android.c2dm.permission.SEND permission is necessary
				so only GCM services can send data messages for the app.
			-->
		<meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />
		<!--
		Defines the FCM  listener service to receive the push messages.
		-->
		<service android:exported="false" android:name="io.smartface.android.notifications.FCMListenerService">
			<intent-filter>
				<action android:name="com.google.firebase.MESSAGING_EVENT" />
			</intent-filter>
		</service>
		
		<!--
		
		Application-specific subclass of GCMBaseIntentService that will
		handle received messages.By default, it must be named .GCMIntentService,
		unless theapplication uses a custom BroadcastReceiver that redefines its name.
		
		-->
		<!-- <receiver>
				android:name="com.google.android.gms.gcm.GcmReceiver"
				android:exported="true"
				android:permission="com.google.android.c2dm.permission.SEND"
			<intent-filter><action android:name="com.google.android.c2dm.intent.RECEIVE" /><action android:name="com.google.android.c2dm.intent.REGISTRATION" /><category android:name="${PackageName}" /></intent-filter></receiver> -->
		<!--
		<service android:name="io.smartface.android.notifications.GCMListenerService" android:exported="false"><intent-filter><action android:name="com.google.android.c2dm.intent.RECEIVE" /></intent-filter></service>-->
		<meta-data android:name="com.google.android.geo.API_KEY" android:value="${GoogleMapsKey}" />
		<activity android:name="com.google.android.gms.ads.AdActivity" android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize" />
		<receiver android:name="io.smartface.android.notifications.LocalNotificationReceiver" />
		<provider android:name="androidx.core.content.FileProvider" android:authorities="${PackageName}.provider" android:exported="false" android:grantUriPermissions="true">
			<meta-data android:name="android.support.FILE_PROVIDER_PATHS" android:resource="@xml/provider_paths" />
		</provider>
		<!-- Cropping Image Activity comes built-in into the Emulator. 
			But to use this feature in published apps, you must define it-->
		<!--<activity android:name="io.smartface.android.sfcore.device.multimedia.crop.SFCropActivity" android:screenOrientation="portrait" android:theme="@style/Theme.AppCompat.Light.NoActionBar"/>-->
	</application>
</manifest>
